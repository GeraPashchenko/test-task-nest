on:
  push:
    branches:
      - main

jobs:
  build:
    environment: dev
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t myapp:latest .

      - name: Tag Docker image
        run: docker tag myapp:latest 36889/myapp:latest

      - name: Push Docker image to Docker Hub
        run: docker push 36889/myapp:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: dev

    steps:
      - name: Echo credentials (sanity check)
        run: |
          echo "EC2_HOST: ${{ secrets.EC2_HOST }}"
          echo "EC2_USER: ${{ secrets.EC2_USER }}"
          echo "EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}" | head -c 30  # Echo only the first 30 characters for verification

      # - name: Test SSH Key
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       echo "Connection successful!"
            
      # - name: Deploy to EC2
      #   uses: appleboy/ssh-action@v0.1.0
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       cd ./
      #       docker-compose pull
      #       docker-compose down
      #       docker-compose up -d

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem


      - name: Connect to EC2 using SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ec2-user@${{ secrets.EC2_HOST }} "echo 'Successfully connected to EC2!'"

      - name: Clean up SSH key
        run: rm -f ec2_key.pem

